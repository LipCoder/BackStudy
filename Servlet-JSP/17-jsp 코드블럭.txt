

# 종류 1 : 출력 코드

add.jsp 안에 "환영합니다."를 작성한 경우

public final add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent
{

    public void _jspService(final javax.servlet.http.HttpServletRequest, ...)
        throws java.io.IOException, javax.servlet.ServletException
        {
            out.write("환영합니다."); 
        }
}



# 종류 2 : 코드블록 (<%%>)

<%
    y = x + 3;
%>

public final add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent
{

    public void _jspService(final javax.servlet.http.HttpServletRequest, ...)
        throws java.io.IOException, javax.servlet.ServletException
        {
            y = x + 3;
        }
}



# 종류 3 : 코드블록(출력용) (=)

y의 값은 : <% =y %> 

public final add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent
{

    public void _jspService(final javax.servlet.http.HttpServletRequest, ...)
        throws java.io.IOException, javax.servlet.ServletException
        {
            out.write("y의 값은 : ");
            out.print(y);
        }
}



# 종류 4 : 선언부(Declaration) (!)

함수를 코드블록 내에 정의되면, _jspService 함수내에 들어가서
컴파일 에러가 발생할 것이다. (java에서는 함수 내에 함수를 넣을 수 없음, 람다함수 제외)
이를 위해서 !를 뒤에 붙여서 정의한다.

<%!
    public int sum(int a, int b)
    {
        return a + b;
    }
%>


public final add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent
{
    public int sum(int a, int b)
    {
        return a + b;
    }

    public void _jspService(final javax.servlet.http.HttpServletRequest, ...)
        throws java.io.IOException, javax.servlet.ServletException
        {
        }
}



# 종류 5 : 초기 설정을 위한 Page 지시자 (@)
페이지 지시자 블럭

<%
    response.setCharacterEncoding("UTF-8");
    response.setContentType("text/html; charset=UTF-8");
%>
이와 같은 선언은.. 다음 에러를 반환한다.
java.lang.IllegalStateException:
getOutputStream has already been called for this response
=> 이미 출력이 진행된 다음에 선언이 진행되는 것은 잘못되었다는 뜻이다.

그래서 초기 설정이 필요한 경우 다음과 같이 해줘야 한다.
<%@ page language="java" contentType="text/html; charset=UTF-8" 
    pageEncoding="UTF-8" %>

이렇게 선언하면 어떤 코드보다 더 먼저 수행된다.

